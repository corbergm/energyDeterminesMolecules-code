function plot_translTranscrTranspCost(data, yLim)

% set panel labels
panelLabel = {'A', 'B'};
% initialise figure
figure('FileName', [char(datetime('today', 'Format', 'yyyy_MM_dd')), '_translTranscrTranspRatioPerStrategy'], ...
       'Name'    , 'translTranscrTranspRatioPerStrategy', ...
       'Units'   , 'centimeter', ...
       'Position', [2, 2, 11.5, 6.5]);

% load colors
load('3Reds4Blues4Greens3Greys3Violets.mat');

%% plot cost factors

% create axis
ax = axes('Units'               , 'centimeter', ...
          'Position'            , [1.5, 2.5, 4, 3], ...
          'Color'               , 'none', ...
          'Box'                 , 'off', ...
          'FontSize'            , 10, ...
          'FontName'            , 'Arial', ...
          'LineWidth'           , 0.5, ...
          'TickDir'             , 'out', ...
          'TickLength'          , [0.02, 0.02], ...
          'TickLabelInterpreter', 'tex', ...
          'XLim'                , [0.5, 2.5], ...
          'YLim'                , yLim, ...
          'YTick'               , -8:4:20); hold on;
set(get(gca, 'XAxis'), 'Color', 'none')
set(get(gca, 'YLabel'), 'String'     , 'log_{10} cost [ATP/s]', ...
                        'Interpreter', 'tex', ...
                        'FontSize'   , 10, ...
                        'FontName'   , 'Arial')
% panel label
text('String'             , panelLabel{1}, ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 12, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'centimeter', ...
     'Position'           , [-1.0, ax.Position(4) + 0.4], ...
     'HorizontalAlignment', 'center', ...
     'VerticalAlignment'  , 'bottom'); hold on;
% boxplot with transcription cost if all parameter combinations prefer
% somatic mRNA.
yDat = log10(data.('transcriptionCost - som'));
xDat = 0.75.*ones(size(yDat));
boxchart(xDat, yDat, ...
         'BoxWidth'        , 0.2, ...
         'MarkerStyle'     , 'none', ...
         'WhiskerLineColor', colors.Red, ...
         'BoxFaceColor'    , colors.Red, ...
         'BoxFaceAlpha'    , 0, ...
         'LineWidth'       , 1); hold on;
% boxplot with translation cost if all parameter combinations prefer
% somatic mRNA.
yDat = log10(data.('translationCost - som'));
xDat = 1.*ones(size(yDat));
boxchart(xDat, yDat, ...
         'BoxWidth'        , 0.2, ...
         'MarkerStyle'     , 'none', ...
         'WhiskerLineColor', colors.Blue, ...
         'BoxFaceColor'    , colors.Blue, ...
         'BoxFaceAlpha'    , 0, ...
         'LineWidth'       , 1); hold on;
% boxplot with transport cost if all parameter combinations prefer
% somatic mRNA.
yDat = log10(data.('transportCost - som'));
xDat = 1.25.*ones(size(yDat));
boxchart(xDat, yDat, ...
         'BoxWidth'        , 0.2, ...
         'MarkerStyle'     , 'none', ...
         'WhiskerLineColor', colors.Grey, ...
         'BoxFaceColor'    , colors.Grey, ...
         'BoxFaceAlpha'    , 0, ...
         'LineWidth'       , 1); hold on;
% x-axis tick label
text('String'             , {'Somatic', 'mRNA'}, ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 10, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'normalized', ...
     'Position'           , [1/4, 1], ...
     'HorizontalAlignment', 'center', ...
     'VerticalAlignment'  , 'bottom'); hold on;
     
% boxplot with transcription cost if all parameter combinations prefer
% dendritic mRNA. Plot median in white on top.
yDat = log10(data.('transcriptionCost - den'));
xDat = 1.75.*ones(size(yDat));
b = boxchart(xDat, yDat, ...
             'BoxWidth'        , 0.2, ...
             'MarkerStyle'     , 'none', ...
             'WhiskerLineColor', colors.Red, ...
             'BoxFaceColor'    , colors.Red, ...
             'BoxFaceAlpha'    , 1, ...
             'LineWidth'       , 1); hold on;
yDat = median(log10(data.('transcriptionCost - den'))).*[ 1, 1];
xDat = 1.75 + (b.BoxWidth/2).*[-1, 1];
plot(xDat, yDat, ...
     'Color'    , 'white', ...
     'LineWidth', 0.75); hold on;
% boxplot with translation cost if all parameter combinations prefer
% dendritic mRNA. Plot median in white on top.
yDat = log10(data.('translationCost - den'));
xDat = 2.*ones(size(yDat));
b = boxchart(xDat, yDat, ...
             'BoxWidth'        , 0.2, ...
             'MarkerStyle'     , 'none', ...
             'WhiskerLineColor', colors.Blue, ...
             'BoxFaceColor'    , colors.Blue, ...
             'BoxFaceAlpha'    , 1, ...
             'LineWidth'       , 1); hold on;
yDat = median(log10(data.('translationCost - den'))).*[ 1, 1];
xDat = 2 + (b.BoxWidth/2).*[-1, 1];
plot(xDat, yDat, ...
     'Color'    , 'white', ...
     'LineWidth', 0.75); hold on;
% boxplot with translation cost if all parameter combinations prefer
% dendritic mRNA. Plot median in white on top.
yDat = log10(data.('transportCost - den'));
xDat = 2.25.*ones(size(yDat));
b = boxchart(xDat, yDat, ...
             'BoxWidth'        , 0.2, ...
             'MarkerStyle'     , 'none', ...
             'WhiskerLineColor', colors.Grey, ...
             'BoxFaceColor'    , colors.Grey, ...
             'BoxFaceAlpha'    , 1, ...
             'LineWidth'       , 1); hold on;
yDat = median(log10(data.('transportCost - den'))).*[ 1, 1];
xDat = 2.25 + (b.BoxWidth/2).*[-1, 1];
plot(xDat, yDat, ...
     'Color'    , 'white', ...
     'LineWidth', 0.75); hold on;
% x-axis tick label
text('String'             , {'Dendritic', 'mRNA'}, ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 10, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'normalized', ...
     'Position'           , [3/4, 1], ...
     'HorizontalAlignment', 'center', ...
     'VerticalAlignment'  , 'bottom'); hold on;
    
%% "savings" arrow below

% axis
ax = axes('Units'               , 'centimeter', ...
          'Position'            , [1.5, 2, 4, 0.5], ...
          'Color'               , 'none', ...
          'Box'                 , 'off', ...
          'FontSize'            , 10, ...
          'FontName'            , 'Arial', ...
          'LineWidth'           , 0.5, ...
          'TickDir'             , 'out', ...
          'TickLength'          , [0.02, 0.02], ...
          'TickLabelInterpreter', 'tex', ...
          'XLim'                , [0.5, 2.5], ...
          'YLim'                , [0, 1]); hold on;
set(get(gca, 'XAxis'), 'Color', 'none')
set(get(gca, 'YAxis'), 'Color', 'none')
% plot connecting arrow from somatic to dendritic mRNA
yDat = [1, 1];
xDat = [0.65, 1.1];
plot(xDat, yDat, ...
     'Color'    , 'black', ...
     'LineWidth', 0.5); hold on;
yDat = [1, 0.5, 0.5, 1];
xDat = [0.875, 0.875, 1.875, 1.875];
plot(xDat, yDat, ...
     'Color'    , 'black', ...
     'LineWidth', 0.5); hold on;
plot(xDat(end), yDat(end), ...
     'Color'    , 'none', ...
     'LineWidth', 0.5, ...
     'Marker', '^', ...
     'MarkerFaceColor', 'black', ...
     'MarkerSize', 4); hold on;
% % savings label
% text('String'             , {'Savings [%]'}, ...
%      'Interpreter'        , 'tex', ...
%      'FontSize'           , 10, ...
%      'FontName'           , 'Arial', ...
%      'Units'              , 'data', ...
%      'Position'           , [1.375, 0.5], ...
%      'HorizontalAlignment', 'center', ...
%      'VerticalAlignment'  , 'top'); hold on;

%% plot savings in transl./transcr. with mRNA transport

% create axis
ax = axes('Units'               , 'centimeter', ...
          'Position'            , [3.3, 0.4, 1, 1.5], ...
          'Color'               , 'none', ...
          'Box'                 , 'off', ...
          'FontSize'            , 10, ...
          'FontName'            , 'Arial', ...
          'LineWidth'           , 0.5, ...
          'TickDir'             , 'out', ...
          'TickLength'          , [0.03, 0.03], ...
          'TickLabelInterpreter', 'tex', ...
          'XLim'                , [0.5, 1.5], ...
          'YLim'                , [-3, 0], ...
          'YTick'               , -3:0, ...
          'YTickLabel'          , {'0.1', '1', '10', '100'}); hold on;
set(get(gca, 'XAxis'), 'Color', 'none')
set(get(gca, 'YLabel'), 'String'     , 'Savings [%]', ...
                        'Interpreter', 'tex', ...
                        'FontSize'   , 10, ...
                        'FontName'   , 'Arial')
% boxplot with transcription cost if all parameter combinations prefer
% somatic mRNA.
yDat = log10((data.('transcriptionCost - som') - data.('transcriptionCost - den'))./data.('transcriptionCost - som'));
xDat = 0.8.*ones(size(yDat));
boxchart(xDat, yDat, ...
         'BoxWidth'        , 0.3, ...
         'MarkerStyle'     , 'none', ...
         'WhiskerLineColor', colors.Red, ...
         'BoxFaceColor'    , colors.Red, ...
         'BoxFaceAlpha'    , 0.5, ...
         'LineWidth'       , 1); hold on;
% boxplot with translation cost if all parameter combinations prefer
% somatic mRNA.
yDat = log10((data.('translationCost - som') - data.('translationCost - den'))./data.('translationCost - som'));
xDat = 1.2.*ones(size(yDat));
boxchart(xDat, yDat, ...
         'BoxWidth'        , 0.3, ...
         'MarkerStyle'     , 'none', ...
         'WhiskerLineColor', colors.Blue, ...
         'BoxFaceColor'    , colors.Blue, ...
         'BoxFaceAlpha'    , 0.5, ...
         'LineWidth'       , 1); hold on;
    
%% plot cost factors normalized with total cost

% create axis
ax = axes('Units'               , 'centimeter', ...
          'Position'            , [7.5, 2.5, 4, 3], ...
          'Color'               , 'none', ...
          'Box'                 , 'off', ...
          'FontSize'            , 10, ...
          'FontName'            , 'Arial', ...
          'LineWidth'           , 0.5, ...
          'TickDir'             , 'out', ...
          'TickLength'          , [0.02, 0.02], ...
          'TickLabelInterpreter', 'tex', ...
          'XLim'                , [0.5, 2.5], ...
          'YLim'                , [-3.9, 0], ...
          'YTick'               , -4:1:0, ...
          'YTickLabel'          , {'0.01', '0.1', '1', '10', '100'}); hold on;
set(get(gca, 'XAxis'), 'Color', 'none')
set(get(gca, 'YLabel'), 'String'     , 'Cost fraction [%]', ...
                        'Interpreter', 'tex', ...
                        'FontSize'   , 10, ...
                        'FontName'   , 'Arial')
% panel label
text('String'             , panelLabel{2}, ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 12, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'centimeter', ...
     'Position'           , [-1.4, ax.Position(4) + 0.4], ...
     'HorizontalAlignment', 'center', ...
     'VerticalAlignment'  , 'bottom'); hold on;
% boxplot with normalized transcription cost if all parameter combinations
% prefer somatic mRNA.
yDat = log10(data.('transcriptionCost - som')./data.('totalCost - som'));
xDat = 0.75.*ones(size(yDat));
boxchart(xDat, yDat, ...
         'BoxWidth'        , 0.2, ...
         'MarkerStyle'     , 'none', ...
         'WhiskerLineColor', colors.Red, ...
         'BoxFaceColor'    , colors.Red, ...
         'BoxFaceAlpha'    , 0, ...
         'LineWidth'       , 1); hold on;
% boxplot with normalized translation cost if all parameter combinations
% prefer somatic mRNA.
yDat = log10(data.('translationCost - som')./data.('totalCost - som'));
xDat = 1.*ones(size(yDat));
boxchart(xDat, yDat, ...
         'BoxWidth'        , 0.2, ...
         'MarkerStyle'     , 'none', ...
         'WhiskerLineColor', colors.Blue, ...
         'BoxFaceColor'    , colors.Blue, ...
         'BoxFaceAlpha'    , 0, ...
         'LineWidth'       , 1); hold on;
% boxplot with normalized transport cost if all parameter combinations
% prefer somatic mRNA.
yDat = log10(data.('transportCost - som')./data.('transportCost - som'));
xDat = 1.25.*ones(size(yDat));
boxchart(xDat, yDat, ...
         'BoxWidth'        , 0.2, ...
         'MarkerStyle'     , 'none', ...
         'WhiskerLineColor', colors.Grey, ...
         'BoxFaceColor'    , colors.Grey, ...
         'BoxFaceAlpha'    , 0, ...
         'LineWidth'       , 1); hold on;
% x-axis tick label
text('String'             , {'Somatic', 'mRNA'}, ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 10, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'normalized', ...
     'Position'           , [1/4, 1], ...
     'HorizontalAlignment', 'center', ...
     'VerticalAlignment'  , 'bottom'); hold on;
     
% boxplot with normalized transcription cost if all parameter combinations
% prefer dendritic mRNA. Plot median in white on top.
yDat = log10(data.('transcriptionCost - den')./data.('totalCost - den'));
xDat = 1.75.*ones(size(yDat));
b = boxchart(xDat, yDat, ...
             'BoxWidth'        , 0.2, ...
             'MarkerStyle'     , 'none', ...
             'WhiskerLineColor', colors.Red, ...
             'BoxFaceColor'    , colors.Red, ...
             'BoxFaceAlpha'    , 1, ...
             'LineWidth'       , 1); hold on;
yDat = median(log10(data.('transcriptionCost - den')./data.('totalCost - den'))).*[ 1, 1];
xDat = 1.75 + (b.BoxWidth/2).*[-1, 1];
plot(xDat, yDat, ...
     'Color'    , 'white', ...
     'LineWidth', 0.75); hold on;
% boxplot with normalized translation cost if all parameter combinations
% prefer dendritic mRNA. Plot median in white on top.
yDat = log10(data.('translationCost - den')./data.('totalCost - den'));
xDat = 2.*ones(size(yDat));
b = boxchart(xDat, yDat, ...
             'BoxWidth'        , 0.2, ...
             'MarkerStyle'     , 'none', ...
             'WhiskerLineColor', colors.Blue, ...
             'BoxFaceColor'    , colors.Blue, ...
             'BoxFaceAlpha'    , 1, ...
             'LineWidth'       , 1); hold on;
yDat = median(log10(data.('translationCost - den')./data.('totalCost - den'))).*[ 1, 1];
xDat = 2 + (b.BoxWidth/2).*[-1, 1];
plot(xDat, yDat, ...
     'Color'    , 'white', ...
     'LineWidth', 0.75); hold on;
% boxplot with normalized transport cost if all parameter combinations
% prefer dendritic mRNA. Plot median in white on top.
yDat = log10(data.('transportCost - den')./data.('totalCost - den'));
xDat = 2.25.*ones(size(yDat));
b = boxchart(xDat, yDat, ...
             'BoxWidth'        , 0.2, ...
             'MarkerStyle'     , 'none', ...
             'WhiskerLineColor', colors.Grey, ...
             'BoxFaceColor'    , colors.Grey, ...
             'BoxFaceAlpha'    , 1, ...
             'LineWidth'       , 1); hold on;
yDat = median(log10(data.('transportCost - den')./data.('totalCost - den'))).*[ 1, 1];
xDat = 2.25 + (b.BoxWidth/2).*[-1, 1];
plot(xDat, yDat, ...
     'Color'    , 'white', ...
     'LineWidth', 0.75); hold on;
% x-axis tick label
text('String'             , {'Dendritic', 'mRNA'}, ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 10, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'normalized', ...
     'Position'           , [3/4, 1], ...
     'HorizontalAlignment', 'center', ...
     'VerticalAlignment'  , 'bottom'); hold on;
     
%% legend

% axis
axes('Units'               , 'centimeter', ...
     'Position'            , [7, 0.2, 1, 2], ...
     'Color'               , 'none', ...
     'Box'                 , 'off', ...
     'XLim'                , [0, 1], ...
     'YLim'                , [0, 1]); hold on;
set(get(gca, 'XAxis'), 'Color', 'none')
set(get(gca, 'YAxis'), 'Color', 'none')
% legend title
text('String'             , {'Cost for ...'}, ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 10, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'data', ...
     'Position'           , [0, 4/5], ...
     'HorizontalAlignment', 'left', ...
     'VerticalAlignment'  , 'middle'); hold on;
% label for "Transcription"
text('String'             , 'Transcription', ...
     'Color'              , colors.Red, ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 10, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'data', ...
     'Position'           , [0, 3/5], ...
     'HorizontalAlignment', 'left', ...
     'VerticalAlignment'  , 'middle'); hold on;
% label for "Translation"
text('String'             , 'Translation', ...
     'Color'              , colors.Blue, ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 10, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'data', ...
     'Position'           , [0, 2/5], ...
     'HorizontalAlignment', 'left', ...
     'VerticalAlignment'  , 'middle'); hold on;
% label for "Transport"
text('String'             , 'Transport', ...
     'Color'              , colors.Grey, ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 10, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'data', ...
     'Position'           , [0, 1/5], ...
     'HorizontalAlignment', 'left', ...
     'VerticalAlignment'  , 'middle'); hold on;
