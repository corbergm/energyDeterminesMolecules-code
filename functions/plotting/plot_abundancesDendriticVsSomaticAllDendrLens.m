function plot_abundancesDendriticVsSomaticAllDendrLens(data, yLim_m, yLim_p)

% set panel labels
panelLabel = {'', ''};

% initialise figure
figure('FileName', [char(datetime('today', 'Format', 'yyyy_MM_dd')), '_abundancesDendriticVsSomaticAllDendrLens'], ...
       'Name'    , 'abundancesDendriticVsSomaticAllDendrLens', ...
       'Units'   , 'centimeter', ...
       'Position', [2, 2, 15, 4.5]);

% load colors
load('3Reds4Blues4Greens3Greys3Violets.mat');

%% get mRNA and protein abundances

% find dendrite length values in the data table    
varVals      = unique(data.('length'));    
% number of dendrite length values in the data table
nVals        = numel(varVals);
% container for mRNA and protein abundance sorted for artificial protein 
% species preferring either dendritic or somatic mRNA
nMRNA        = [];
nMRNA.den    = cell(size(varVals));
nMRNA.som    = cell(size(varVals));
nProtein     = [];
nProtein.den = cell(size(varVals));
nProtein.som = cell(size(varVals));
% store mRNA and protein abundance for all dendritic lengths
for i = 1:nVals
    % get data with current dendrite length
    tmpDat          = data(data.('length') == varVals(i), :);
    % store the cheapest strategy per parameter combination 
    % (0 = somatic mRNA, 1 = dendritic mRNA with mRNA transport)
    denIsCheapest   = tmpDat.('totalCost - den') < tmpDat.('totalCost - som');
    % abundance of mRNA and protein sorted for artificial protein species
    % preferring either dendritic or somatic mRNA
    nMRNA.den{i}    = tmpDat.('mRNADendrTotal - den')( denIsCheapest) + tmpDat.('mRNASomaTotal - den')( denIsCheapest);
    nMRNA.som{i}    = tmpDat.('mRNADendrTotal - som')(~denIsCheapest) + tmpDat.('mRNASomaTotal - som')(~denIsCheapest);
    nProtein.den{i} = tmpDat.('proteinDendrTotal - den')( denIsCheapest) + tmpDat.('proteinSpineTotal - den')( denIsCheapest);
    nProtein.som{i} = tmpDat.('proteinDendrTotal - som')(~denIsCheapest) + tmpDat.('proteinSpineTotal - som')(~denIsCheapest);
end

%% plot mRNA abundance per cheapest strategy

% axis
ax = axes('Units'               , 'centimeter', ...
          'Position'            , [1, 1, 4, 3], ...
          'Color'               , 'none', ...
          'Box'                 , 'off', ...
          'FontSize'            , 10, ...
          'FontName'            , 'Arial', ...
          'LineWidth'           , 0.5, ...
          'TickDir'             , 'out', ...
          'TickLength'          , [0.02, 0.02], ...
          'TickLabelInterpreter', 'tex', ...
          'XLim'                , [0.7, nVals + 0.8], ...
          'YLim'                , yLim_m, ...
          'YTick'               , 0:2:30); hold on;
set(get(gca, 'XAxis'), 'Color', 'none')
set(get(gca, 'YLabel'), 'String'     , 'log_{10} mRNA count', ...
                        'Interpreter', 'tex', ...
                        'FontSize'   , 10, ...
                        'FontName'   , 'Arial')
% panel label
text('String'             , panelLabel{1}, ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 12, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'centimeter', ...
     'Position'           , [-0.75, ax.Position(4) + 0.1], ...
     'HorizontalAlignment', 'center', ...
     'VerticalAlignment'  , 'bottom'); hold on;
% iterate over dendrite lengths
for i = 1:nVals
    % boxplot with mRNA abundance for parameter combinations preferring
    % somatic mRNA
    yDat = log10(nMRNA.som{i});
    xDat = i.*ones(size(yDat));
    boxchart(xDat, yDat, ...
             'BoxWidth'        , 0.3, ...
             'MarkerStyle'     , 'none', ...
             'WhiskerLineColor', colors.Red, ...
             'BoxFaceColor'    , colors.Red, ...
             'BoxFaceAlpha'    , 0, ...
             'LineWidth'       , 1); hold on;
    % boxplot with mRNA abundance for parameter combinations preferring
    % dendritic mRNA. Plot median in white on top.
    yDat = log10(nMRNA.den{i});
    xDat = (i + 0.4).*ones(size(yDat));
    b    = boxchart(xDat, yDat, ...
                   'BoxWidth'        , 0.3, ...
                   'MarkerStyle'     , 'none', ...
                   'WhiskerLineColor', colors.Red, ...
                   'BoxFaceColor'    , colors.Red, ...
                   'BoxFaceAlpha'    , 1, ...
                   'LineWidth'       , 1); hold on;
    yDat = median(log10(nMRNA.den{i})).*[ 1, 1];
    xDat = (i + 0.4) + (b.BoxWidth/2).*[-1, 1];
    plot(xDat, yDat, ...
         'Color'    , 'white', ...
         'LineWidth', 0.75); hold on;
    % x-axis tick label
    text('String'             , num2str(varVals(i)), ...
         'Interpreter'        , 'tex', ...
         'FontSize'           , 10, ...
         'FontName'           , 'Arial', ...
         'Units'              , 'data', ...
         'Position'           , [i + 0.2, yLim_m(1)], ...
         'HorizontalAlignment', 'center', ...
         'VerticalAlignment'  , 'top'); hold on;
end
% label x-axis
text('String'             , 'Dendrite length [\mum]', ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 10, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'normalized', ...
     'Position'           , [0.5, -0.2], ...
     'HorizontalAlignment', 'center', ...
     'VerticalAlignment'  , 'middle'); hold on;

%% plot protein abundance per cheapest strategy

% axis
ax = axes('Units'               , 'centimeter', ...
          'Position'            , [6.5, 1, 4, 3], ...
          'Color'               , 'none', ...
          'Box'                 , 'off', ...
          'FontSize'            , 10, ...
          'FontName'            , 'Arial', ...
          'LineWidth'           , 0.5, ...
          'TickDir'             , 'out', ...
          'TickLength'          , [0.02, 0.02], ...
          'TickLabelInterpreter', 'tex', ...
          'XLim'                , [0.7, nVals + 0.8], ...
          'YLim'                , yLim_p, ...
          'YTick'               , 0:2:30); hold on;
set(get(gca, 'XAxis'), 'Color', 'none')
set(get(gca, 'YLabel'), 'String'     , 'log_{10} protein count', ...
                        'Interpreter', 'tex', ...
                        'FontSize'   , 10, ...
                        'FontName'   , 'Arial')
% panel label
text('String'             , panelLabel{2}, ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 12, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'centimeter', ...
     'Position'           , [-0.75, ax.Position(4) + 0.1], ...
     'HorizontalAlignment', 'center', ...
     'VerticalAlignment'  , 'bottom'); hold on;
% iterate over dendrite lengths
for i = 1:nVals
    % boxplot with protein abundance for parameter combinations preferring
    % somatic mRNA
    yDat = log10(nProtein.som{i});
    xDat = i.*ones(size(yDat));
    boxchart(xDat, yDat, ...
             'BoxWidth'        , 0.3, ...
             'MarkerStyle'     , 'none', ...
             'WhiskerLineColor', colors.Blue, ...
             'BoxFaceColor'    , colors.Blue, ...
             'BoxFaceAlpha'    , 0, ...
             'LineWidth'       , 1); hold on;
    % boxplot with protein abundance for parameter combinations preferring
    % dendritic mRNA. Plot median in white on top.
    yDat = log10(nProtein.den{i});
    xDat = (i + 0.4).*ones(size(yDat));
    b    = boxchart(xDat, yDat, ...
                   'BoxWidth'        , 0.3, ...
                   'MarkerStyle'     , 'none', ...
                   'WhiskerLineColor', colors.Blue, ...
                   'BoxFaceColor'    , colors.Blue, ...
                   'BoxFaceAlpha'    , 1, ...
                   'LineWidth'       , 1); hold on;
    yDat = median(log10(nProtein.den{i})).*[ 1, 1];
    xDat = (i + 0.4) + (b.BoxWidth/2).*[-1, 1];
    plot(xDat, yDat, ...
         'Color'    , 'white', ...
         'LineWidth', 0.75); hold on;
    % x-axis tick label
    text('String'             , num2str(varVals(i)), ...
         'Interpreter'        , 'tex', ...
         'FontSize'           , 10, ...
         'FontName'           , 'Arial', ...
         'Units'              , 'data', ...
         'Position'           , [i + 0.2, yLim_p(1)], ...
         'HorizontalAlignment', 'center', ...
         'VerticalAlignment'  , 'top'); hold on;
end
% label x-axis
text('String'             , 'Dendrite length [\mum]', ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 10, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'normalized', ...
     'Position'           , [0.5, -0.2], ...
     'HorizontalAlignment', 'center', ...
     'VerticalAlignment'  , 'middle'); hold on;

%% legend

% axis
axes('Units'               , 'centimeter', ...
     'Position'            , [11, 1, 1, 3], ...
     'Color'               , 'none', ...
     'Box'                 , 'off', ...
     'XLim'                , [0, 1], ...
     'YLim'                , [0, 1]); hold on;
set(get(gca, 'XAxis'), 'Color', 'none')
set(get(gca, 'YAxis'), 'Color', 'none')
% legend title
text('String'             , {'Proteins grouped along', 'the cheapest alternative:'}, ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 10, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'data', ...
     'Position'           , [0, 3/4], ...
     'HorizontalAlignment', 'left', ...
     'VerticalAlignment'  , 'middle'); hold on;
% random data for boxplot symbols in the legend
mockDat = 0.2.*rand(1, 500) - 0.1;
% colors.Red marker for "somatic mRNA"
yDat = 2/4 + mockDat;
xDat = 0.2.*ones(size(mockDat));
boxchart(xDat, yDat, ...
         'BoxWidth'        , 0.2, ...
         'MarkerStyle'     , 'none', ...
         'WhiskerLineColor', colors.Red, ...
         'BoxFaceColor'    , colors.Red, ...
         'BoxFaceAlpha'    , 0, ...
         'LineWidth'       , 1); hold on;
% colors.Blue marker for "somatic mRNA"
yDat = 2/4 + mockDat;
xDat = 0.45.*ones(size(mockDat));
boxchart(xDat, yDat, ...
         'BoxWidth'        , 0.2, ...
         'MarkerStyle'     , 'none', ...
         'WhiskerLineColor', colors.Blue, ...
         'BoxFaceColor'    , colors.Blue, ...
         'BoxFaceAlpha'    , 0, ...
         'LineWidth'       , 1); hold on;
% label for "somatic mRNA"
text('String'             , 'Somatic mRNA', ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 10, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'data', ...
     'Position'           , [0.65, 2/4], ...
     'HorizontalAlignment', 'left', ...
     'VerticalAlignment'  , 'middle'); hold on;
% colors.Red marker for "dendritic mRNA", median in white on top
yDat = 1/4 + mockDat;
xDat = 0.2.*ones(size(mockDat));
b    = boxchart(xDat, yDat, ...
                'BoxWidth'        , 0.2, ...
                'MarkerStyle'     , 'none', ...
                'WhiskerLineColor', colors.Red, ...
                'BoxFaceColor'    , colors.Red, ...
                'BoxFaceAlpha'    , 1, ...
                'LineWidth'       , 1); hold on;
yDat = 1/4 + median(mockDat).*[ 1, 1];
xDat = 0.2 + (b.BoxWidth/2).*[-1, 1];
plot(xDat, yDat, ...
     'Color'    , 'white', ...
     'LineWidth', 0.75); hold on;
% colors.Blue marker for "dendritic mRNA", median in white on top
yDat = 1/4 + mockDat;
xDat = 0.45.*ones(size(mockDat));
b    = boxchart(xDat, yDat, ...
                'BoxWidth'        , 0.2, ...
                'MarkerStyle'     , 'none', ...
                'WhiskerLineColor', colors.Blue, ...
                'BoxFaceColor'    , colors.Blue, ...
                'BoxFaceAlpha'    , 1, ...
                'LineWidth'       , 1); hold on;
yDat = 1/4 + median(mockDat).*[ 1, 1];
xDat = 0.45 + (b.BoxWidth/2).*[-1, 1];
plot(xDat, yDat, ...
     'Color'    , 'white', ...
     'LineWidth', 0.75); hold on;
% label for "dendritic mRNA"
text('String'             , 'Dendritic mRNA', ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 10, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'data', ...
     'Position'           , [0.65, 1/4], ...
     'HorizontalAlignment', 'left', ...
     'VerticalAlignment'  , 'middle'); hold on;
