function plot_costBeforeAndAfter100microns(data)

% panel label
panelLabel = {'A', 'B'};
% initialise figure
figure('FileName', [char(datetime('today', 'Format', 'yyyy_MM_dd')), '_costBeforeAndAfter100microns'], ...
       'Name'    , 'costBeforeAndAfter100microns', ...
       'Units'   , 'centimeter', ...
       'Position', [2, 2, 10, 9.5]);

% load colors
load('3Reds4Blues4Greens3Greys3Violets.mat');

%% cost within and beyond 100 microns - no protein transport

% axis
ax = axes('Units'               , 'centimeter', ...
          'Position'            , [2, 5.5, 6, 3], ...
          'Color'               , 'none', ...
          'Box'                 , 'off', ...
          'FontSize'            , 10, ...
          'FontName'            , 'Arial', ...
          'LineWidth'           , 0.5, ...
          'TickDir'             , 'out', ...
          'TickLength'          , [0.02, 0.02], ...
          'TickLabelInterpreter', 'tex', ...
          'XLim'                , [0.5, 2.5], ...
          'YLim'                , [0, 1], ...
          'YTick'               , 0:0.25:1); hold on;
set(get(gca, 'XAxis'), 'Color', 'none')
set(get(gca, 'YLabel'), 'String'     , 'Share of total cost', ...
                        'Interpreter', 'tex', ...
                        'FontSize'   , 10, ...
                        'FontName'   , 'Arial')
% panel label
text('String'             , panelLabel{1}, ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 12, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'centimeter', ...
     'Position'           , [-1.5, ax.Position(4) + 0.2], ...
     'HorizontalAlignment', 'center', ...
     'VerticalAlignment'  , 'bottom'); hold on;
    
% somatic mRNA
% -------------------------------------------------------------------------
% get data without protein transport
tmpDat = data(data.('transp_p - som') == 0, :);
% total cost in soma
inSoma = tmpDat.('totalCostInSoma - som')./tmpDat.('totalCost - som');
% total cost per 10 micron dendrite segment
perSeg = tmpDat.('totalCostPer10MicronSegment - som')./tmpDat.('totalCost - som');
% boxplot for total cost within the first 100 microns. 
yDat   = sum(perSeg(:, 1:10), 2) + inSoma;
xDat   = ones(size(yDat))*0.8;
boxchart(xDat(:), yDat(:), ...
         'BoxWidth'        , 0.2, ...
         'MarkerStyle'     , 'none', ...
         'WhiskerLineColor', colors.Red, ...
         'BoxFaceColor'    , colors.Red, ...
         'BoxFaceAlpha'    , 0, ...
         'LineWidth'       , 1); hold on;
% boxplot for total cost beyond the first 100 microns. 
yDat   = sum(perSeg(:, 11:end), 2);
xDat   = ones(size(yDat))*1.2;
boxchart(xDat(:), yDat(:), ...
         'BoxWidth'        , 0.2, ...
         'MarkerStyle'     , 'none', ...
         'WhiskerLineColor', colors.Red, ...
         'BoxFaceColor'    , colors.Red, ...
         'BoxFaceAlpha'    , 0, ...
         'LineWidth'       , 1); hold on;

% dendritic mRNA
% -------------------------------------------------------------------------
% get data without protein transport
tmpDat = data(data.('transp_p - den') == 0, :);
% total cost in soma
inSoma = tmpDat.('totalCostInSoma - den')./tmpDat.('totalCost - den');
% total cost per 10 micron dendrite segment
perSeg = tmpDat.('totalCostPer10MicronSegment - den')./tmpDat.('totalCost - den');
% boxplot for total cost within the first 100 microns. Plot median in white 
% on top.
yDat   = sum(perSeg(:, 1:10), 2) + inSoma;
xDat   = ones(size(yDat))*1.8;
b      = boxchart(xDat(:), yDat(:), ...
                 'BoxWidth'        , 0.2, ...
                 'MarkerStyle'     , 'none', ...
                 'WhiskerLineColor', colors.Red, ...
                 'BoxFaceColor'    , colors.Red, ...
                 'BoxFaceAlpha'    , 1, ...
                 'LineWidth'       , 1); hold on;
yDat   = median(sum(perSeg(:, 1:10), 2) + inSoma).*[ 1, 1];
xDat   = 1.8 + (b.BoxWidth/2).*[-1, 1];
plot(xDat, yDat, ...
     'Color'    , 'white', ...
     'LineWidth', 0.75); hold on;
% boxplot for total cost beyond the first 100 microns. Plot median in white 
% on top.
yDat   = sum(perSeg(:, 11:end), 2);
xDat   = ones(size(yDat))*2.2;
b      = boxchart(xDat(:), yDat(:), ...
                 'BoxWidth'        , 0.2, ...
                 'MarkerStyle'     , 'none', ...
                 'WhiskerLineColor', colors.Red, ...
                 'BoxFaceColor'    , colors.Red, ...
                 'BoxFaceAlpha'    , 1, ...
                 'LineWidth'       , 1); hold on;
yDat   = median(sum(perSeg(:, 11:end), 2)).*[ 1, 1];
xDat   = 2.2 + (b.BoxWidth/2).*[-1, 1];
plot(xDat, yDat, ...
     'Color'    , 'white', ...
     'LineWidth', 0.75); hold on;
% x-axis ticks
for i = 1:2
    text('String'             , '0-100', ...
         'Interpreter'        , 'tex', ...
         'FontSize'           , 10, ...
         'FontName'           , 'Arial', ...
         'Units'              , 'data', ...
         'Position'           , [i - 0.2, -0.04], ...
         'HorizontalAlignment', 'center', ...
         'VerticalAlignment'  , 'top'); hold on;
    text('String'             , '>100', ...
         'Interpreter'        , 'tex', ...
         'FontSize'           , 10, ...
         'FontName'           , 'Arial', ...
         'Units'              , 'data', ...
         'Position'           , [i + 0.2, -0.04], ...
         'HorizontalAlignment', 'center', ...
         'VerticalAlignment'  , 'top'); hold on;
end
% column labels
colLabels = {{'Somatic mRNA'}, {'Dendritic mRNA'}};
for col = 1:2
    text('String'             , colLabels{col}, ...
         'Interpreter'        , 'tex', ...
         'FontSize'           , 10, ...
         'FontName'           , 'Arial', ...
         'Units'              , 'data', ...
         'Position'           , [col, 1.1], ...
         'HorizontalAlignment', 'center', ...
         'VerticalAlignment'  , 'bottom'); hold on;
end
% row label with bracket
text('String'             , {'No protein', 'transport'}, ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 10, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'normalized', ...
     'Position'           , [0.99, 0.5], ...
     'HorizontalAlignment', 'left', ...
     'VerticalAlignment'  , 'middle'); hold on;
plot([2.45, 2.5, 2.5], [0, 0, 0.35], ...
     'Color'    , 'black', ...
     'LineWidth', 0.5); hold on;
plot([2.5, 2.5, 2.45], [0.65, 1, 1], ...
     'Color'    , 'black', ...
     'LineWidth', 0.5); hold on;

clear ax b col colLabels i inSoma perSeg tmpDat xDat yDat

%% cost within and beyond 100 microns - with protein transport

% axis
ax = axes('Units'               , 'centimeter', ...
          'Position'            , [2, 1.25, 6, 3], ...
          'Color'               , 'none', ...
          'Box'                 , 'off', ...
          'FontSize'            , 10, ...
          'FontName'            , 'Arial', ...
          'LineWidth'           , 0.5, ...
          'TickDir'             , 'out', ...
          'TickLength'          , [0.02, 0.02], ...
          'TickLabelInterpreter', 'tex', ...
          'XLim'                , [0.5, 2.5], ...
          'YLim'                , [0, 1], ...
          'YTick'               , 0:0.25:1); hold on;
set(get(gca, 'XAxis'), 'Color', 'none')
set(get(gca, 'YLabel'), 'String'     , 'Share of total cost', ...
                        'Interpreter', 'tex', ...
                        'FontSize'   , 10, ...
                        'FontName'   , 'Arial')
% panel label
text('String'             , panelLabel{2}, ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 12, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'centimeter', ...
     'Position'           , [-1.5, ax.Position(4) + 0.2], ...
     'HorizontalAlignment', 'center', ...
     'VerticalAlignment'  , 'bottom'); hold on;
    
% somatic mRNA
% -------------------------------------------------------------------------
% get data with protein transport
tmpDat = data(data.('transp_p - som') > 0, :);
% total cost in soma
inSoma = tmpDat.('totalCostInSoma - som')./tmpDat.('totalCost - som');
% total cost per 10 micron dendrite segment
perSeg = tmpDat.('totalCostPer10MicronSegment - som')./tmpDat.('totalCost - som');
% boxplot for total cost within the first 100 microns. 
yDat   = sum(perSeg(:, 1:10), 2) + inSoma;
xDat   = ones(size(yDat))*0.8;
boxchart(xDat(:), yDat(:), ...
         'BoxWidth'        , 0.2, ...
         'MarkerStyle'     , 'none', ...
         'WhiskerLineColor', colors.Blue, ...
         'BoxFaceColor'    , colors.Blue, ...
         'BoxFaceAlpha'    , 0, ...
         'LineWidth'       , 1); hold on;
% boxplot for total cost beyond the first 100 microns. 
yDat   = sum(perSeg(:, 11:end), 2);
xDat   = ones(size(yDat))*1.2;
boxchart(xDat(:), yDat(:), ...
         'BoxWidth'        , 0.2, ...
         'MarkerStyle'     , 'none', ...
         'WhiskerLineColor', colors.Blue, ...
         'BoxFaceColor'    , colors.Blue, ...
         'BoxFaceAlpha'    , 0, ...
         'LineWidth'       , 1); hold on;

% dendritic mRNA
% -------------------------------------------------------------------------
% get data with protein transport
tmpDat = data(data.('transp_p - den') > 0, :);
% total cost in soma
inSoma = tmpDat.('totalCostInSoma - den')./tmpDat.('totalCost - den');
% total cost per 10 micron dendrite segment
perSeg = tmpDat.('totalCostPer10MicronSegment - den')./tmpDat.('totalCost - den');
% boxplot for total cost within the first 100 microns. Plot median in white 
% on top.
yDat   = sum(perSeg(:, 1:10), 2) + inSoma;
xDat   = ones(size(yDat))*1.8;
b      = boxchart(xDat(:), yDat(:), ...
                 'BoxWidth'        , 0.2, ...
                 'MarkerStyle'     , 'none', ...
                 'WhiskerLineColor', colors.Violet, ...
                 'BoxFaceColor'    , colors.Violet, ...
                 'BoxFaceAlpha'    , 1, ...
                 'LineWidth'       , 1); hold on;
yDat   = median(sum(perSeg(:, 1:10), 2) + inSoma).*[ 1, 1];
xDat   = 1.8 + (b.BoxWidth/2).*[-1, 1];
plot(xDat, yDat, ...
     'Color'    , 'white', ...
     'LineWidth', 0.75); hold on;
% boxplot for total cost beyond the first 100 microns. Plot median in white 
% on top.
yDat   = sum(perSeg(:, 11:end), 2);
xDat   = ones(size(yDat))*2.2;
b      = boxchart(xDat(:), yDat(:), ...
                 'BoxWidth'        , 0.2, ...
                 'MarkerStyle'     , 'none', ...
                 'WhiskerLineColor', colors.Violet, ...
                 'BoxFaceColor'    , colors.Violet, ...
                 'BoxFaceAlpha'    , 1, ...
                 'LineWidth'       , 1); hold on;
yDat   = median(sum(perSeg(:, 11:end), 2)).*[ 1, 1];
xDat   = 2.2 + (b.BoxWidth/2).*[-1, 1];
plot(xDat, yDat, ...
     'Color'    , 'white', ...
     'LineWidth', 0.75); hold on;
% x-axis ticks
for i = 1:2
    text('String'             , '0-100', ...
         'Interpreter'        , 'tex', ...
         'FontSize'           , 10, ...
         'FontName'           , 'Arial', ...
         'Units'              , 'data', ...
         'Position'           , [i - 0.2, -0.04], ...
         'HorizontalAlignment', 'center', ...
         'VerticalAlignment'  , 'top'); hold on;
    text('String'             , '>100', ...
         'Interpreter'        , 'tex', ...
         'FontSize'           , 10, ...
         'FontName'           , 'Arial', ...
         'Units'              , 'data', ...
         'Position'           , [i + 0.2, -0.04], ...
         'HorizontalAlignment', 'center', ...
         'VerticalAlignment'  , 'top'); hold on;
end
% x-label
text('String'             , 'Dendritic distance [\mum]', ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 10, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'normalized', ...
     'Position'           , [0.5, -0.2], ...
     'HorizontalAlignment', 'center', ...
     'VerticalAlignment'  , 'top'); hold on;
% row label with bracket
text('String'             , {'With protein', 'transport'}, ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 10, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'normalized', ...
     'Position'           , [0.99, 0.5], ...
     'HorizontalAlignment', 'left', ...
     'VerticalAlignment'  , 'middle'); hold on;
plot([2.45, 2.5, 2.5], [0, 0, 0.35], ...
     'Color'    , 'black', ...
     'LineWidth', 0.5); hold on;
plot([2.5, 2.5, 2.45], [0.65, 1, 1], ...
     'Color'    , 'black', ...
     'LineWidth', 0.5); hold on;

clear ax b col colLabels i inSoma perSeg tmpDat xDat yDat
