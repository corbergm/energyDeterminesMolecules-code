function plot_somToDendrCostProtDiffConst(data, varList)

% initialise figure
figure('FileName', [char(datetime('today', 'Format', 'yyyy_MM_dd')), '_somToDendrCostProtDiffConst'], ...
       'Name'    , 'somToDendrCostProtDiffConst', ...
       'Units'   , 'centimeter', ...
       'Position', [0, 0, 9, 5]);
% load colors
load('3Reds4Blues4Greens3Greys3Violets.mat');

% names of variables
varNameList    = varList.('Variable');
% sort data table along variables
data           = sortrows(data ,varNameList);

tmpDat         = data;
% variable name
varName        = 'D_p';    
% find variable values in the data table    
varVals        = unique(tmpDat.(varName));    
% number of values per parameter
nVals          = numel(varVals);
% check if exactly three values are present, otherwise give an error
if nVals ~= 3
    error(['This plot requires exactly 3 values per parameter, but ', num2str(nVals), 'are present in the provided data.'])
end
% number of entries
nRows          = size(tmpDat, 1);    
% sort the data table along the values of the protein diffusion 
% constant (variable 2), then along all other parameters. Reshaping 
% into "nVals" columns then gives a similar ordering of parameter 
% combinations within each column
sortOrder      = 1:size(varList, 1);
sortOrder      = [2, sortOrder(sortOrder ~= 2)];
tmpDat         = sortrows(tmpDat, varNameList(sortOrder), 'ascend');%sortrows(tmpDat, varName, 'ascend');
clear sortOrder
% get the logarithmic cost ratio of "somatic mRNA" vs 
% "dendritic mRNA with transport"
somVsden       = tmpDat.('totalCost - som') ./ tmpDat.('totalCost - den');
% reshape into matrix with entries for each parameter value in a single
% column (works because table was sorted). The ordering of parameter 
% combinations within each column is the same.
somVsden       = reshape(somVsden, nRows/nVals, nVals);
% Normalize with middle row, corresponding to the "middle" value of
% the current parameter of interest. Note that this only works with 3
% parameter values.
somVsden(:, 1) = somVsden(:, 1)./somVsden(:, 2);
somVsden(:, 3) = somVsden(:, 3)./somVsden(:, 2);
somVsden(:, 2) = somVsden(:, 2)./somVsden(:, 2);
% Finally, remove the baseline and transform to percent
somVsden       = (somVsden - 1).*100;

%% plot the results

% major axis
ax = axes('Units'               , 'centimeter', ...
          'Position'            , [4, 1.25, 2.5, 3], ...
          'Color'               , 'none', ...
          'Box'                 , 'off', ...
          'FontSize'            , 10, ...
          'FontName'            , 'Arial', ...
          'LineWidth'           , 0.5, ...
          'TickDir'             , 'out', ...
          'TickLength'          , [0.02, 0.02], ...
          'TickLabelInterpreter', 'tex', ...
          'YAxisLocation'       , 'right', ...
          'XLim'                , [0.4, nVals + 0.6], ...
          'YLim'                , [-1.25, 1.25], ...
          'YTick'               , [-1, 0, 1]); hold on;
set(get(ax, 'XAxis'), 'Color', 'none')
% set the colors 
shortColorList = [colors.LightBlue; colors.Blue; colors.DarkBlue];

%% show data with a defined break in the y-axis

% get the y-values of the three bars
yDat    = median(somVsden(:, :));
% where y-ticks should be set
tickDat = [-20, 0, 4000];
set(ax, 'YTickLabels', tickDat)
% now re-scale the bar heights such that they are correctly represented
% with the ticklabels 4000 at 1 and -20 at -1:
yDat(1) =  yDat(1)/tickDat(3);
yDat(3) = -yDat(3)/tickDat(1);
% bar plot
for bInd = 1:nVals
    b = bar(bInd, yDat(bInd), ...
            'CData'    , shortColorList(bInd, :), ...
            'FaceColor', 'flat', ...
            'FaceAlpha', yDat(bInd) > 0, ...
            'EdgeColor', 'flat', ...
            'LineWidth', 1); hold on;
    set(get(b, 'BaseLine'), 'Color', 'none')
end
% y-axis break with a white box
patch('XData'    , [nVals - 0.1, ax.XLim(2), ax.XLim(2), nVals - 0.1], ...
      'YData'    , [0.48, 0.48, 0.49, 0.49], ...
      'FaceColor', 'white', ...
      'EdgeColor', 'white', ...
      'LineWidth', 2); hold on;
% break bars with a white zig-zag line
xDat = 0.05:0.15:2;
yDat = [0.47, 0.53, 0.47, 0.53, 0.47, 0.53, 0.47, 0.53, 0.47, 0.53, 0.47, 0.53, 0.47, 0.53];
plot(xDat, yDat, ...
     'Color'    , 'white', ...
     'LineWidth', 1.5); hold on;
% break lines with a simple '=' at y=0.5
text('String'             , '=', ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 10, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'data', ...
     'Position'           , [ax.XLim(2), 0.5], ...
     'HorizontalAlignment', 'center', ...
     'VerticalAlignment'  , 'middle'); hold on;

% x-axis ticks
for j = 1:nVals
    % correct units to log10 
    text('String'             , num2str(log10(varVals(j))), ...
         'Interpreter'        , 'tex', ...
         'FontSize'           , 10, ...
         'FontName'           , 'Arial', ...
         'Units'              , 'normalized', ...
         'Position'           , [(2*j-1)/(2*nVals), 0], ...
         'HorizontalAlignment', 'center', ...
         'VerticalAlignment'  , 'top'); hold on;
end
% x-axis label
text('String'             , [varList.('Name for plots'){strcmp(varNameList, varName)}, ...
                             varList.('Units for plots'){strcmp(varNameList, varName)}], ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 10, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'normalized', ...
     'Position'           , [0.5, -0.2], ...
     'HorizontalAlignment', 'center', ...
     'VerticalAlignment'  , 'middle'); hold on;
% y-axis label
text('String'             , {'Somatic/dendritic cost', 'rel. to middle value [%]'}, ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 10, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'normalized', ...
     'Position'           , [1.4, 0.5], ...
     'Rotation'           , -90, ...
     'HorizontalAlignment', 'center', ...
     'VerticalAlignment'  , 'bottom'); hold on;
% adjust y-axis limits
yLim = get(gca, 'YLim');
yLim = sign(yLim).*yLim;
yLim = max(yLim);
yLim = yLim.*[-1, 1];
set(gca, 'YLim', yLim);

%% plot explanatory panel on the top-left figure edge

% axis
ax = axes('Units'               , 'centimeter', ...
          'Position'            , [2, 1.25, 1.5, 3], ...
          'Color'               , 'none', ...
          'Box'                 , 'off', ...
          'FontSize'            , 10, ...
          'FontName'            , 'Arial', ...
          'LineWidth'           , 0.5, ...
          'TickDir'             , 'out', ...
          'TickLength'          , [0.02, 0.02], ...
          'TickLabelInterpreter', 'tex', ...
          'XLim'                , [0, 1], ...
          'XTick'               , [], ...
          'YLim'                , [0, 1], ...
          'YTick'               , []); hold on;
set(get(ax, 'XAxis'), 'Color', 'none')
set(get(ax, 'YAxis'), 'Color', 'none')
% panel label
text('String'             , 'A', ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 12, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'centimeter', ...
     'Position'           , [-1.5, ax.Position(4)], ...
     'HorizontalAlignment', 'center', ...
     'VerticalAlignment'  , 'bottom'); hold on;    
% plot one upward-pointing and one downward-pointing arrow
plot([1, 1], [0, 1], ...
     'Color', 'black', ...
     'LineWidth', 0.5, ...
     'LineStyle', '-'); hold on;
plot(1, 0, ...
     'Color', 'black', ...
     'Marker', 'v', ...
     'MarkerSize', 3, ...
     'MarkerFaceColor', 'black'); hold on;
plot(1, 0.5, ...
     'Color', 'white', ...
     'Marker', 'o', ...
     'MarkerSize', 3, ...
     'MarkerFaceColor', 'white'); hold on;
plot(1, 1, ...
     'Color', 'black', ...
     'Marker', '^', ...
     'MarkerSize', 3, ...
     'MarkerFaceColor', 'black'); hold on;
% label upward-pointing arrow with "Dendritic mRNA gets more efficient"
text('String'             , {'Dendritic mRNA', 'preference'}, ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 10, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'data', ...
     'Position'           , [0.9, 1], ...
     'HorizontalAlignment', 'right', ...
     'VerticalAlignment'  , 'top'); hold on;   
% label downward-pointing arrow with "Somatic mRNA gets more efficient"
text('String'             , {'Somatic mRNA', 'preference'}, ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 10, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'data', ...
     'Position'           , [0.9, 0], ...
     'HorizontalAlignment', 'right', ...
     'VerticalAlignment'  , 'bottom'); hold on;  
