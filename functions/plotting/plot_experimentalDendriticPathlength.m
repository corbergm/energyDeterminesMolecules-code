function plot_experimentalDendriticPathlength(pathLen, dirPaperList)

% number of directories
nDirs                        = numel(dirPaperList);
% initialise figure
figure('FileName', [char(datetime('today', 'Format', 'yyyy_MM_dd')), '_experimentalDendriticPathlength'], ...
       'Name'    , 'experimentalDendriticPathlength', ...
       'Units'   , 'centimeter', ...
       'Position', [2, 2, 9, 4]);

% load colors
load('3Reds4Blues4Greens3Greys3Violets.mat');

% axis
axes('Units'               , 'centimeter', ...
     'Position'            , [0.5, 1.5, 5, 2], ...
     'Color'               , 'none', ...
     'Box'                 , 'off', ...
     'View'                , [90, -90], ...
     'FontSize'            , 10, ...
     'FontName'            , 'Arial', ...
     'LineWidth'           , 0.5, ...
     'TickDir'             , 'out', ...
     'TickLength'          , [0.02, 0.02], ...
     'TickLabelInterpreter', 'tex', ...
     'XLim'                , [0.4, nDirs + 0.5], ...
     'YLim'                , [0, 750], ...
     'YTick'               , 0:250:750, ...
     'YTickLabelRotation'  , 0); hold on;
set(get(gca, 'XAxis'), 'Color', 'none')
set(get(gca, 'YLabel'), 'String'     , 'Maximal dendritic distance [\mum]', ...
                        'Interpreter', 'tex', ...
                        'FontSize'   , 10, ...
                        'FontName'   , 'Arial')
% plot swarmchart and boxchart with dendrite pathlengths per reference
for i = 1:nDirs
    xDat = i.*ones(sum(pathLen(:, 2) == i), 1);
    yDat = pathLen(pathLen(:, 2) == i, 1);
    swarmchart(xDat, yDat, ...
               'SizeData'       , 10, ...
               'MarkerFaceColor', colors.LightGrey, ...
               'MarkerFaceAlpha', 1, ...
               'MarkerEdgeColor', 'black', ...
               'MarkerEdgeAlpha', 0.5); hold on;
    boxchart(xDat, yDat, ...
             'BoxWidth'        , 0.5, ...
             'MarkerStyle'     , 'none', ...
             'WhiskerLineColor', 'black', ...
             'BoxFaceColor'    , 'black', ...
             'BoxFaceAlpha'    , 0, ...
             'LineWidth'       , 1); hold on;
end
% label data sources
for i = 1:nDirs
    text('String'             , dirPaperList{i}, ...
         'Interpreter'        , 'tex', ...
         'FontSize'           , 10, ...
         'FontName'           , 'Arial', ...
         'Units'              , 'normalized', ...
         'Position'           , [1, (2*i - 1)/(2*nDirs)], ...
         'HorizontalAlignment', 'left', ...
         'VerticalAlignment'  , 'middle'); hold on;
end
